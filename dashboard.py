# -*- coding: utf-8 -*-
"""Untitled12.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1d_-r6Mqjz1qpSrokSBeo-r25WWdHihX8
"""

!pip install streamlit

!pip install pandas matplotlib seaborn statsmodels

# Commented out IPython magic to ensure Python compatibility.
# %%writefile dashboard.py
# import streamlit as st
# import pandas as pd
# import matplotlib.pyplot as plt
# import seaborn as sns
# import statsmodels.api as sm
# 
# sns.set(style='dark')
# 
# st.title("🚴‍♂️ Dashboard Analisis Penyewaan Sepeda🚴‍♂️")
# st.write("by: Titi Prihartati")
# bike_df = pd.read_csv("https://raw.githubusercontent.com/Titiprihartati/Bike-sharing-dataset/main/day.csv")
# bike2_df = pd.read_csv("https://raw.githubusercontent.com/Titiprihartati/Bike-sharing-dataset/main/hour.csv")
# bike_df['dteday'] = pd.to_datetime(bike_df['dteday'])
# bike2_df['dteday'] = pd.to_datetime(bike2_df['dteday'])
# 
# # Sidebar untuk filter tanggal
# with st.sidebar:
#     st.image("https://github.com/dicodingacademy/assets/raw/main/logo.png")
# 
#     min_date = bike_df['dteday'].min()
#     max_date = bike_df['dteday'].max()
# 
#     start_date, end_date = st.date_input("Periode Waktu", [min_date, max_date], min_value=min_date, max_value=max_date)
# 
# # Filter data berdasarkan tanggal
# bike_df = bike_df[(bike_df['dteday'] >= pd.to_datetime(start_date)) & (bike_df['dteday'] <= pd.to_datetime(end_date))]
# bike2_df = bike2_df[(bike2_df['dteday'] >= pd.to_datetime(start_date)) & (bike2_df['dteday'] <= pd.to_datetime(end_date))]
# 
# # Analisis suhu dan jumlah penyewaan
# st.subheader("📊 Analisis Pengaruh Suhu terhadap Penyewaan Sepeda")
# 
# bike_df["temp_group"] = pd.qcut(bike_df["temp"], q=4, labels=["Dingin", "Sejuk", "Hangat", "Panas"])
# avg_rentals_per_temp = bike_df.groupby("temp_group")["cnt"].mean().reset_index()
# 
# fig, ax = plt.subplots()
# sns.barplot(data=avg_rentals_per_temp, x="temp_group", y="cnt", palette="Blues_r", ax=ax)
# ax.set_title("Rata-rata Penyewaan Sepeda Berdasarkan Suhu")
# ax.set_xlabel("Kategori Suhu")
# ax.set_ylabel("Rata-rata Penyewaan Sepeda")
# st.pyplot(fig)
# 
# # Analisis jam penyewaan sepeda
# st.subheader("⏰ Jam Tersibuk dalam Penyewaan Sepeda")
# 
# if "hr" in bike2_df.columns:
#     hourly_rentals = bike2_df.groupby("hr")["cnt"].sum().reset_index()
#     fig, ax = plt.subplots()
#     sns.lineplot(data=hourly_rentals, x="hr", y="cnt", marker="o", color="b", linestyle="-", ax=ax)
#     ax.set_title("Jumlah Penyewaan Sepeda Berdasarkan Jam")
#     ax.set_xlabel("Jam dalam Sehari (0-23)")
#     ax.set_ylabel("Total Penyewaan Sepeda")
#     ax.grid(True)
#     st.pyplot(fig)
# else:
#     st.write("Kolom 'hr' tidak ditemukan di bike2_df!")
# 
# # Analisis regresi
# st.subheader("📉 Analisis Regresi: Suhu vs Penyewaan Sepeda")
# 
# X = bike_df[['temp']]
# X = sm.add_constant(X)
# y = bike_df['cnt']
# model = sm.OLS(y, X).fit()
# st.text(model.summary())
# 
# st.subheader("📉 Analisis Regresi: Jam vs Penyewaan Sepeda")
# 
# if "hr" in bike2_df.columns:
#     X = bike2_df[['hr']]
#     X = sm.add_constant(X)
#     y = bike2_df['cnt']
#     model = sm.OLS(y, X).fit()
#     st.text(model.summary())
#

!pip install streamlit pyngrok

from pyngrok import ngrok

# Jalankan Streamlit sebagai background process
!streamlit run dashboard.py &

# Buat tunnel untuk akses publik
public_url = ngrok.connect(port='8501')
print("Akses dashboard di:", public_url)

